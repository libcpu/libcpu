/*
 * libcpu: i386_tag_stub.cpp
 * 
 * THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY UPCC
 */

#include <llvm/MC/MCInstrDesc.h>
#include <llvm/MC/MCInstrAnalysis.h>

#include "i386_arch.h"
#include "i386_disasm.h"
#include "tag.h"
	 
int
arch_i386_tag_instr(cpu_t *cpu, addr_t pc, tag_t *tag, addr_t *new_pc, addr_t *next_pc)
{
	uint64_t size;
	MCInst insn;
	insn = DecodeInstruction(cpu, pc, &size);
	
	const MCInstrDesc &desc = DescForInst(insn);
	const MCInstrAnalysis analyzer = MCInstrAnalysis(GetInstInfo());
	
	if (desc.isReturn())
	{
		*tag = TAG_RET;
	}
	else if (desc.isCall())
	{
		*tag = TAG_CALL;
		*new_pc = analyzer.evaluateBranch(insn, pc, size);
	}
	else if (desc.isBranch())
	{
		*tag = TAG_BRANCH;
		*new_pc = analyzer.evaluateBranch(insn, pc, size);
	}
	if (desc.isCompare())
	{
		*tag = TAG_CONDITIONAL;
	}
	else
	{
		*tag = TAG_CONTINUE;
	}
	
	*next_pc = pc + size;
	return size;
}
