/*
 * libcpu: i386_tag_stub.cpp
 * 
 * THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY UPCC
 */

#include "i386_arch.h"
#include "i386_disasm.h"
#include "tag.h"
	 
#define ARCH_I386_INSN_FETCH(cpu, pc, insn) ({})

int
arch_i386_tag_instr(cpu_t *cpu, addr_t pc, tag_t *tag, addr_t *new_pc, addr_t *next_pc)
{
	uint64_t size;
	MCInst insn;
	insn = DecodeInstruction(cpu, pc, &size);
	
	/*
	arch_i386_insn_t insn;
	insn.length = 1;
	
	ARCH_I386_INSN_FETCH(cpu, pc, insn);
	switch (insn.opcode) {
		case ARCH_I386_OPC_ILLEGAL:
			*tag = TAG_TRAP;
			break;

		default:
			*tag = TAG_CONTINUE;
			break;
	}
	*/

	*next_pc = pc + size;
	
	return size;
}
