/*
 * libcpu: i386_regfile.h
 * 
 * the register file
 * 
 * !!! DO NOT EDIT THIS FILE !!!
 * 
 * THIS FILE HAS BEEN AUTOMATICALLY GENERATED BY UPCC
 */

#ifndef __i386_regfile_h__
#define __i386_regfile_h__


typedef PACKED(struct _reg_i386 {
	uint16_t cs; // update-on-write
	union {
		uint16_t cw;
		struct {
			uint16_t IM : 1; // sub
			uint16_t DM : 1; // sub
			uint16_t ZM : 1; // sub
			uint16_t OM : 1; // sub
			uint16_t UM : 1; // sub
			uint16_t PM : 1; // sub
			uint16_t __unnamed_cw_6 : 2; // sub, hardwired
			uint16_t PC : 2; // sub
			uint16_t RC : 2; // sub
			uint16_t X : 1; // sub
			uint16_t __unnamed_cw_13 : 3; // sub, hardwired
		};
	} cw;
	uint16_t ds;
	uint8_t __padding_0[2];
	union {
		uint32_t eax;
		struct {
			union {
				uint32_t ax : 16; // sub
				struct {
					uint16_t al : 8; // sub
					uint16_t ah : 8; // sub
				};
			} ax; // sub
			uint32_t __unnamed_eax_16 : 16; // sub
		};
	} eax;
	union {
		uint32_t ebp;
		struct {
			uint32_t bp : 16; // sub
			uint32_t __unnamed_ebp_16 : 16; // sub
		};
	} ebp;
	union {
		uint32_t ebx;
		struct {
			union {
				uint32_t bx : 16; // sub
				struct {
					uint16_t bl : 8; // sub
					uint16_t bh : 8; // sub
				};
			} bx; // sub
			uint32_t __unnamed_ebx_16 : 16; // sub
		};
	} ebx;
	union {
		uint32_t ecx;
		struct {
			union {
				uint32_t cx : 16; // sub
				struct {
					uint16_t cl : 8; // sub
					uint16_t ch : 8; // sub
				};
			} cx; // sub
			uint32_t __unnamed_ecx_16 : 16; // sub
		};
	} ecx;
	union {
		uint32_t edi;
		struct {
			uint32_t di : 16; // sub
			uint32_t __unnamed_edi_16 : 16; // sub
		};
	} edi;
	union {
		uint32_t edx;
		struct {
			union {
				uint32_t dx : 16; // sub
				struct {
					uint16_t dl : 8; // sub
					uint16_t dh : 8; // sub
				};
			} dx; // sub
			uint32_t __unnamed_edx_16 : 16; // sub
		};
	} edx;
	union {
		uint32_t eflags; // bound to special register
		struct {
			union {
				uint32_t flags : 16; // sub
				struct {
					uint16_t C : 1; // sub, bound to special register, update-on-write
					uint16_t __unnamed_flags_1 : 1; // sub, hardwired
					uint16_t P : 1; // sub, bound to special register
					uint16_t __unnamed_flags_3 : 1; // sub, hardwired
					uint16_t A : 1; // sub
					uint16_t __unnamed_flags_5 : 1; // sub, hardwired
					uint16_t Z : 1; // sub, bound to special register
					uint16_t S : 1; // sub, bound to special register
					uint16_t T : 1; // sub
					uint16_t I : 1; // sub
					uint16_t D : 1; // sub
					uint16_t O : 1; // sub, bound to special register
					uint16_t __unnamed_flags_12 : 1; // sub, hardwired
					uint16_t __unnamed_flags_13 : 1; // sub, hardwired
					uint16_t __unnamed_flags_14 : 1; // sub, hardwired
					uint16_t __unnamed_flags_15 : 1; // sub, hardwired
				};
			} flags; // sub
			uint32_t __unnamed_eflags_16 : 16; // sub
		};
	} eflags; // bound to special register
	uint16_t es;
	uint8_t __padding_1[2];
	union {
		uint32_t esi;
		struct {
			uint32_t si : 16; // sub
			uint32_t __unnamed_esi_16 : 16; // sub
		};
	} esi;
	union {
		uint32_t esp;
		struct {
			uint32_t sp : 16; // sub
			uint32_t __unnamed_esp_16 : 16; // sub
		};
	} esp;
	uint8_t intno;
	uint8_t __padding_2[1];
	union {
		uint64_t pc : 48; // bound to special register
		struct {
			union {
				uint64_t eip : 32; // sub
				struct {
					uint32_t ip : 16; // sub
					uint32_t __unnamed_eip_16 : 16; // sub
				};
			} eip; // sub
			uint64_t seg : 16; // sub
			uint64_t __unused_pc_48 : 16;
		};
	} pc; // bound to special register
	uint16_t ss;
	uint8_t __padding_3[2];
	union {
		uint64_t st_mmx0[2];
		struct {
			uint64_t mm0; // sub
			uint64_t __unnamed_st_mmx0_64 : 16; // sub
			uint64_t __unused_st_mmx0_80 : 48;
		};
	} st_mmx0;
	union {
		uint64_t st_mmx1[2];
		struct {
			uint64_t mm1; // sub
			uint64_t __unnamed_st_mmx1_64 : 16; // sub
			uint64_t __unused_st_mmx1_80 : 48;
		};
	} st_mmx1;
	union {
		uint64_t st_mmx2[2];
		struct {
			uint64_t mm2; // sub
			uint64_t __unnamed_st_mmx2_64 : 16; // sub
			uint64_t __unused_st_mmx2_80 : 48;
		};
	} st_mmx2;
	union {
		uint64_t st_mmx3[2];
		struct {
			uint64_t mm3; // sub
			uint64_t __unnamed_st_mmx3_64 : 16; // sub
			uint64_t __unused_st_mmx3_80 : 48;
		};
	} st_mmx3;
	union {
		uint64_t st_mmx4[2];
		struct {
			uint64_t mm4; // sub
			uint64_t __unnamed_st_mmx4_64 : 16; // sub
			uint64_t __unused_st_mmx4_80 : 48;
		};
	} st_mmx4;
	union {
		uint64_t st_mmx5[2];
		struct {
			uint64_t mm5; // sub
			uint64_t __unnamed_st_mmx5_64 : 16; // sub
			uint64_t __unused_st_mmx5_80 : 48;
		};
	} st_mmx5;
	union {
		uint64_t st_mmx6[2];
		struct {
			uint64_t mm6; // sub
			uint64_t __unnamed_st_mmx6_64 : 16; // sub
			uint64_t __unused_st_mmx6_80 : 48;
		};
	} st_mmx6;
	union {
		uint64_t st_mmx7[2];
		struct {
			uint64_t mm7; // sub
			uint64_t __unnamed_st_mmx7_64 : 16; // sub
			uint64_t __unused_st_mmx7_80 : 48;
		};
	} st_mmx7;
	union {
		uint16_t sw;
		struct {
			uint16_t IE : 1; // sub
			uint16_t DE : 1; // sub
			uint16_t ZE : 1; // sub
			uint16_t OE : 1; // sub
			uint16_t UE : 1; // sub
			uint16_t PE : 1; // sub
			uint16_t SF : 1; // sub
			uint16_t ES : 1; // sub
			uint16_t C0 : 1; // sub
			uint16_t C1 : 1; // sub
			uint16_t C2 : 1; // sub
			uint16_t TOP : 3; // sub
			uint16_t C3 : 1; // sub
			uint16_t B : 1; // sub
		};
	} sw;
}) reg_i386_t;

#endif  /* __i386_regfile_h__ */
